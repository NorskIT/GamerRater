// <auto-generated />

using System;
using GamerRater.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GamerRater.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    internal class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GamerRater.Model.GameCover", b =>
            {
                b.Property<int>("id");

                b.Property<int>("game");

                b.Property<int>("height");

                b.Property<string>("image_id");

                b.Property<string>("url");

                b.Property<int>("width");

                b.HasKey("id");

                b.ToTable("Covers");
            });

            modelBuilder.Entity("GamerRater.Model.GameRoot", b =>
            {
                b.Property<int>("Id");

                b.Property<int>("Category");

                b.Property<int>("Cover");

                b.Property<int>("Created_at");

                b.Property<int>("GameCoverId");

                b.Property<string>("Name");

                b.Property<double>("Popularity");

                b.Property<string>("Storyline");

                b.Property<string>("Summary");

                b.Property<double>("Total_rating");

                b.HasKey("Id");

                b.HasIndex("GameCoverId");

                b.ToTable("Games");
            });

            modelBuilder.Entity("GamerRater.Model.Platform", b =>
            {
                b.Property<int>("Id");

                b.Property<string>("Abbreviation");

                b.Property<string>("Alternative_name");

                b.Property<int>("Category");

                b.Property<int>("Created_at");

                b.Property<int?>("GameRootId");

                b.Property<string>("Name");

                b.Property<int>("Platform_logo");

                b.Property<int>("Product_family");

                b.Property<string>("Slug");

                b.Property<string>("Summary");

                b.Property<int>("Updated_at");

                b.Property<string>("Url");

                b.HasKey("Id");

                b.HasIndex("GameRootId");

                b.ToTable("Platforms");
            });

            modelBuilder.Entity("GamerRater.Model.Review", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("GameRootId");

                b.Property<string>("ReviewText");

                b.Property<int>("Stars");

                b.Property<int>("UserId");

                b.Property<DateTime>("date");

                b.HasKey("Id");

                b.HasIndex("GameRootId");

                b.HasIndex("UserId");

                b.ToTable("Ratings");
            });

            modelBuilder.Entity("GamerRater.Model.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Email");

                b.Property<string>("FirstName");

                b.Property<string>("LastName");

                b.Property<string>("Password");

                b.Property<string>("Username");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("GamerRater.Model.UserGroup", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Group");

                b.HasKey("Id");

                b.ToTable("UserGroups");
            });

            modelBuilder.Entity("GamerRater.Model.UserHasUserGroup", b =>
            {
                b.Property<int>("UserId");

                b.Property<int>("UserGroupId");

                b.HasKey("UserId", "UserGroupId");

                b.HasIndex("UserGroupId");

                b.ToTable("UserHasUserGroups");
            });

            modelBuilder.Entity("GamerRater.Model.GameRoot", b =>
            {
                b.HasOne("GamerRater.Model.GameCover", "GameCover")
                    .WithMany()
                    .HasForeignKey("GameCoverId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("GamerRater.Model.Platform", b =>
            {
                b.HasOne("GamerRater.Model.GameRoot")
                    .WithMany("PlatformList")
                    .HasForeignKey("GameRootId");
            });

            modelBuilder.Entity("GamerRater.Model.Review", b =>
            {
                b.HasOne("GamerRater.Model.GameRoot")
                    .WithMany("Reviews")
                    .HasForeignKey("GameRootId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("GamerRater.Model.User", "User")
                    .WithMany("Reviews")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("GamerRater.Model.UserHasUserGroup", b =>
            {
                b.HasOne("GamerRater.Model.UserGroup", "UserGroup")
                    .WithMany("Users")
                    .HasForeignKey("UserGroupId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("GamerRater.Model.User", "User")
                    .WithMany("UserGroups")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}